ImageRuntimeVersion: v4.0.30319
Assembly PcapDotNet.Base, Version=1.0.4.25027, Culture=neutral, PublicKeyToken=06a20bc2fabb1931: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class PcapDotNet.Base.BitSequence: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToByte(Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Merge(Byte, UInt16): PrivateScope, Public, Static, HideBySig
    Merge(UInt16, Byte, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, UInt16, Byte): PrivateScope, Public, Static, HideBySig
    Merge(Byte, Byte, UInt16): PrivateScope, Public, Static, HideBySig
    Merge(UInt32, UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Merge(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Merge(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.CharExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsUppercaseAlpha(Char): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.DateTimeExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AddMicroseconds(DateTime, Double): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.EncodingExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.Text.Encoding Iso88591 'get ' : 
  Methods:
    get_Iso88591(): PrivateScope, Public, Static, HideBySig, SpecialName
Class PcapDotNet.Base.FuncExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GenerateArray(Func`1, Int32): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.IDictionaryExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DictionaryEquals(IDictionary`2, IDictionary`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    DictionaryEquals(IDictionary`2, IDictionary`2): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.IEnumerableExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsNullOrEmpty(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Concat(IEnumerable`1, T[]): PrivateScope, Public, Static, HideBySig
    Xor(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Xor(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Xor(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Xor(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SequenceToString(IEnumerable`1, String, String, String): PrivateScope, Public, Static, HideBySig
    SequenceToString(IEnumerable`1, String, String): PrivateScope, Public, Static, HideBySig
    SequenceToString(IEnumerable`1, String): PrivateScope, Public, Static, HideBySig
    SequenceToString(IEnumerable`1, Char): PrivateScope, Public, Static, HideBySig
    SequenceToString(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    BytesSequenceToHexadecimalString(IEnumerable`1, String): PrivateScope, Public, Static, HideBySig
    BytesSequenceToHexadecimalString(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceGetHashCode(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    BytesSequenceGetHashCode(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    UShortsSequenceGetHashCode(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Count(IEnumerable`1, T): PrivateScope, Public, Static, HideBySig
    IsStrictOrdered(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IsStrictOrdered(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    IsStrictOrdered(IEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.IListExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AsReadOnly(IList`1): PrivateScope, Public, Static, HideBySig
    Range(IList`1, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.InlineEqualityComparer`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Func`3[T,T,System.Boolean], System.Func`2[T,System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[T]
Class PcapDotNet.Base.MatchExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GroupCapturesValues(Match, String): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.PropertyInfoExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetValue(PropertyInfo, Object): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.Sequence: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetHashCode(Object, Object): PrivateScope, Public, Static, HideBySig
    GetHashCode(Object, Object, Object): PrivateScope, Public, Static, HideBySig
    GetHashCode(Object[]): PrivateScope, Public, Static, HideBySig
Struct PcapDotNet.Base.SerialNumber32: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[PcapDotNet.Base.SerialNumber32]
    System.IComparable`1[PcapDotNet.Base.SerialNumber32]
  Fields:
    Int32 SizeOf = 4 : Public, Static, Literal, HasDefault
    Int32 SerialBits = 32 : Public, Static, Literal, HasDefault
    UInt32 MaxAdditiveNumber = 2147483647 : Public, Static, Literal, HasDefault
  Properties:
    UInt32 Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Add(UInt32): PrivateScope, Public, HideBySig
    Equals(SerialNumber32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CompareTo(SerialNumber32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(SerialNumber32, SerialNumber32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SerialNumber32, SerialNumber32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(SerialNumber32, SerialNumber32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(SerialNumber32, SerialNumber32): PrivateScope, Public, Static, HideBySig, SpecialName
Class PcapDotNet.Base.ShortExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ReverseEndianity(Int16): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.StringExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AreAllCharactersInRange(String, Char, Char): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.TimeSpanExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int64 TicksPerMicrosecond = 10 : Public, Static, Literal, HasDefault
  Methods:
    Divide(TimeSpan, Double): PrivateScope, Public, Static, HideBySig
    Multiply(TimeSpan, Double): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.TypeExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetEnumValues(Type): PrivateScope, Public, Static, HideBySig
Struct PcapDotNet.Base.UInt128: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt64, UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Numerics.BigInteger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[PcapDotNet.Base.UInt128]
    System.IEquatable`1[PcapDotNet.Base.UInt128]
    System.IFormattable
  Fields:
    PcapDotNet.Base.UInt128 MinValue : Public, Static, InitOnly
    PcapDotNet.Base.UInt128 MaxValue : Public, Static, InitOnly
    PcapDotNet.Base.UInt128 Zero : Public, Static, InitOnly
    PcapDotNet.Base.UInt128 One : Public, Static, InitOnly
    Int32 SizeOf = 16 : Public, Static, Literal, HasDefault
  Methods:
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, UInt128&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, UInt128&(Out)): PrivateScope, Public, Static, HideBySig
    Equals(UInt128): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    CompareTo(UInt128): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    op_RightShift(UInt128, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LeftShift(UInt128, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    RightShift(UInt128, Int32): PrivateScope, Public, Static, HideBySig
    LeftShift(UInt128, Int32): PrivateScope, Public, Static, HideBySig
    op_BitwiseAnd(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    BitwiseAnd(UInt128, UInt128): PrivateScope, Public, Static, HideBySig
    op_BitwiseOr(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    BitwiseOr(UInt128, UInt128): PrivateScope, Public, Static, HideBySig
    op_Addition(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(UInt128, UInt128): PrivateScope, Public, Static, HideBySig
    op_Subtraction(UInt128, UInt128): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(UInt128, UInt128): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct PcapDotNet.Base.UInt24: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    PcapDotNet.Base.UInt24 MaxValue : Public, Static, InitOnly
    Int32 SizeOf = 3 : Public, Static, Literal, HasDefault
  Methods:
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt24): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(UInt24): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(UInt24, UInt24): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(UInt24, UInt24): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct PcapDotNet.Base.UInt48: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    PcapDotNet.Base.UInt48 MinValue : Public, Static, InitOnly
    PcapDotNet.Base.UInt48 MaxValue : Public, Static, InitOnly
    Int32 SizeOf = 6 : Public, Static, Literal, HasDefault
  Methods:
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt48): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt48): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt48): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(UInt48): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(UInt48, UInt48): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(UInt48, UInt48): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, HideBySig
Class PcapDotNet.Base.UIntExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DigitsCount(UInt32, Double): PrivateScope, Public, Static, HideBySig
Class PcapDotNet.Base.UShortExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ReverseEndianity(UInt16): PrivateScope, Public, Static, HideBySig
